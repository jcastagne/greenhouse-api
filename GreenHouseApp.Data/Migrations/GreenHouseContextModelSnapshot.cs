// <auto-generated />
using System;
using GreenHouseApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GreenHouseApp.Data.Migrations
{
    [DbContext(typeof(GreenHouseContext))]
    partial class GreenHouseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GreenHouseApp.Domain.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("GreenHouseApp.Domain.GenericName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("GenericNames");
                });

            modelBuilder.Entity("GreenHouseApp.Domain.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AverageHeight");

                    b.Property<int?>("ColorId");

                    b.Property<string>("CommonName");

                    b.Property<bool>("Evergreen");

                    b.Property<DateTime>("FlourishEnd");

                    b.Property<DateTime>("FlourishStart");

                    b.Property<int?>("GenericNameId");

                    b.Property<int?>("SpecificNameId");

                    b.Property<int?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("GenericNameId");

                    b.HasIndex("SpecificNameId");

                    b.HasIndex("TypeId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("GreenHouseApp.Domain.PlantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("PlantTypes");
                });

            modelBuilder.Entity("GreenHouseApp.Domain.SpecificName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("SpecificNames");
                });

            modelBuilder.Entity("GreenHouseApp.Domain.Plant", b =>
                {
                    b.HasOne("GreenHouseApp.Domain.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("GreenHouseApp.Domain.GenericName", "GenericName")
                        .WithMany()
                        .HasForeignKey("GenericNameId");

                    b.HasOne("GreenHouseApp.Domain.SpecificName", "SpecificName")
                        .WithMany()
                        .HasForeignKey("SpecificNameId");

                    b.HasOne("GreenHouseApp.Domain.PlantType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
